---
name: "PR comment testing"

on:
  pull_request:
      branches: 'main'

jobs:
    terraform:
        runs-on: ubuntu-latest
        steps:
          ## REQUIRED: Workflow permissions: `Read and write permissions`
          - uses: actions/github-script@v6
            with:
              script: |
                // 1. Retrieve existing bot comments for the PR
                const { data: comments } = await github.rest.issues.listComments({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: context.issue.number,
                })
                const botComment = comments.find(comment => {
                  return comment.user.type === 'Bot' && comment.body.includes('Terraform Cloud Plan Output')
                })
                const output = `#### Terraform Cloud Plan Output
                  \`\`\`\n
                  Plan: [PLAN DESCRIPTION] to add, [ADD] to change, [DESTROY] to destroy.
                  \`\`\`
                  [Terraform Cloud Plan] [PLAN DESCRIPTION]
                  `
                // 3. If we have a comment, update it, otherwise create a new one
                if (botComment) {
                  github.rest.issues.updateComment({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    comment_id: botComment.id,
                    body: output
                  })
                } else {
                  github.rest.issues.createComment({
                    issue_number: context.issue.number,
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    body: output
                  })
                }